;Tminus1010_^CommonFunctions.esm
;0x0009DA
;zCFzFnNarrateCollection
scn zCFzFnNarrateCollection

array_var cCollection
int bAlwaysFormID
int bSingleLine

short bDoOnce
array_var Iter
string_var svReturning

Begin _Function {cCollection bAlwaysFormID bSingleLine}
; Filter
if eval !cCollection
	SetFunctionValue "<Collection(Unconstructed)>"
	return
elseif eval !(ar_Size cCollection)
	SetFunctionValue "<Collection(Empty)>"
	return
endif
;
ForEach Iter <- cCollection
	if eval !bDoOnce
		let bDoOnce := 1
	else
		if bSingleLine
			let svReturning := svReturning+","
		else
			let svReturning := svReturning+"%r"
		endif
	endif
	let CF.iNarrateCollectionRecursionLevel+=1
	if bAlwaysFormID && bSingleLine
		let svReturning := svReturning+$Iter["Key"]+":"+Call NarrateSLFID Iter
	elseif bSingleLine
		let svReturning := svReturning+$Iter["Key"]+":"+Call NarrateSL Iter
	elseif bAlwaysFormID
		let svReturning := svReturning+(Call zCFzFnIndent (CF.iNarrateCollectionRecursionLevel))+$Iter["Key"]+":"+Call NarrateFID Iter
	else
		let svReturning := svReturning+(Call zCFzFnIndent (CF.iNarrateCollectionRecursionLevel))+$Iter["Key"]+":"+Call Narrate Iter
	endif
	let CF.iNarrateCollectionRecursionLevel-=1
Loop
SetFunctionValue svReturning
; Close
sv_Destruct svReturning
end
;<CSEBlock>
;<CSECaretPos> 10 </CSECaretPos>
;</CSEBlock>