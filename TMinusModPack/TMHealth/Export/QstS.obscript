scn QstS

short featureBleed
short featureRegen
short bShouldLogWarning
short bShouldLogDebug
short bShouldLogFlooding
float startBleedHealthPercentage
float startRegenHealthPercentage
float secondsUntilDeathFromBleedHealthPercentage
float secondsUntilFullHealthFromRegenHealthPercentage
float neutralizefGlobalTimeMultiplier
short bPrintToConsole

short bDisallowRestWhileBleeding

float startBleedHealthFraction
float startRegenHealthFraction

ref rTemp
int counter
ref rTemp2
short bInit

begin _GameMode
	Call Init
	Let counter := 0
	Set rTemp to GetFirstRef
	while rTemp
		if eval !(rTemp.Call CFIsCallingObjectStable)
			if eval bShouldLogFlooding
				Call LogTH "Skipping bc rTemp is not stable. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval !(rTemp.IsActor)
			if eval bShouldLogFlooding
				Call LogTH "Skipping bc rTemp was not an actor. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval (rTemp.GetItemCount TMHealthToken) > 0
			if eval bShouldLogFlooding
				Call LogTH "Skipping bc rTemp already has token. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval (rTemp.GetDead)
			if eval bShouldLogFlooding
				Call LogTH "Skipping bc rTemp is dead. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif

		; TODO: Add to player silently
		;		if eval (rTemp == PlayerRef)
		;			;PlayerRef.AddItem shows a message at the top left of the screen.
		;			;This workaround prevents that message from being shown.
		;			Let rTemp2 := PlayerRef.PlaceAtMe TMHealthToken 1
		;			rTemp2.Activate PlayerRef 1
		;			Set rTemp to GetNextRef
		;			continue
		;		endif

		Let counter += 1
		if eval bShouldLogFlooding
			Call LogTH "Adding item to:" + $(rTemp)
		endif
		rTemp.AddItem TMHealthToken 1

		Set rTemp to GetNextRef
	loop
	if eval bShouldLogFlooding
		Call LogTH "Loop complete. counter:" +$counter
	endif
end