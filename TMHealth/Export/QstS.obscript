scn QstS

float startBleedHealthPercentage
float startRegenHealthPercentage
float secondsUntilDeathFromBleedHealthPercentage
float secondsUntilFullHealthFromRegenHealthPercentage
float secondsMult

float startBleedHealthFraction
float startRegenHealthFraction


short bInit

ref rTemp
int counter
ref rTemp2

begin _GameMode
	SetModLogLevel LogLevelDebug
	if eval !binit
		Let bInit := 1
		RunBatchScript "Data\ini\TMHealth.ini"
		Let startBleedHealthFraction := startBleedHealthPercentage / 100
		Let startRegenHealthFraction := startRegenHealthPercentage / 100
		Logd "startBleedHealthFraction:" + $startBleedHealthFraction
		Logd "startRegenHealthFraction:" + $startRegenHealthFraction
		Logd "secondsUntilDeathFromBleedHealthPercentage:" + $secondsUntilDeathFromBleedHealthPercentage
		Logd "secondsUntilFullHealthFromRegenHealthPercentage:" + $secondsUntilFullHealthFromRegenHealthPercentage
		Logd "secondsMult:" + $secondsMult
	endif
	Let counter := 0
	Set rTemp to GetFirstRef
	while rTemp
		SetModLogLevel LogLevelWarning
		if eval !(rTemp.Call CFIsCallingObjectStable)
			if eval ShouldLog LogLevelFlooding
				Logf "Skipping bc rTemp is not stable. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval !(rTemp.IsActor)
			if eval ShouldLog LogLevelFlooding
				Logf "Skipping bc rTemp was not an actor. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval (rTemp.GetItemCount TMHealthToken) > 0
			if eval ShouldLog LogLevelFlooding
				Logf "Skipping bc rTemp already has token. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif
		if eval (rTemp.GetDead)
			if eval ShouldLog LogLevelFlooding
				Logf "Skipping bc rTemp is dead. rTemp:" +$rTemp
			endif
			Set rTemp to GetNextRef
			continue
		endif

		
;		if eval (rTemp == PlayerRef)
;			;PlayerRef.AddItem shows a message at the top left of the screen.
;			;This workaround prevents that message from being shown.
;			Let rTemp2 := PlayerRef.PlaceAtMe TMHealthToken 1
;			rTemp2.Activate PlayerRef 1
;			Set rTemp to GetNextRef
;			continue
;		endif

		

		Let counter += 1
		if eval ShouldLog LogLevelFlooding
			Logf "Adding item to:" + $(rTemp)
		endif
		rTemp.AddItem TMHealthToken 1


		Set rTemp to GetNextRef
	loop
	Logf "Loop complete. counter:" +$counter
end